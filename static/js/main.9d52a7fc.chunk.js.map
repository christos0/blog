{"version":3,"sources":["app/layout/theme.ts","app/layout/Routes.tsx","app/layout/Layout.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx","app/hooks/useMediaQueries.ts","app/hooks/useWidths.ts","app/components/externalLink/ExternalLink.tsx","app/components/navBar/NavBarLg.tsx","app/components/navBar/NavBarSm.tsx","app/components/navBar/NavBar.tsx","app/components/navBar/NavBarItem.tsx","app/components/navBar/NavBarColorSwitch.tsx"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","Home","lazy","Routes","exact","path","component","Layout","maxWidth","useWidths","flexDir","websiteTitle","Item","to","name","ColorSwitch","maxW","fontFamily","App","basename","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","useMediaQueries","useMediaQuery","isSm","isMd","isLg","isXl","ExternalLink","externalLinkProps","href","title","props","label","isExternal","as","AiOutlineLink","NavBarLg","children","h","w","align","justify","RouterLink","_hover","textDecor","boxShadow","size","whiteSpace","spacing","NavBarSm","useDisclosure","isOpen","onOpen","onClose","icon","onClick","placement","mb","NavBar","navBarItemProps","useColorMode","colorMode","toggleColorMode","FaSun","FaMoon","mr","onChange"],"mappings":"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","file":"static/js/main.9d52a7fc.chunk.js","sourcesContent":["import { extendTheme, ThemeConfig } from \"@chakra-ui/react\"\r\n\r\nconst config : ThemeConfig = {\r\n  initialColorMode: \"light\",\r\n  useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({ config })\r\n\r\nexport default theme","import { lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst Home = lazy(() => import(\"pages/home/Home\"));\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n","import { Center, Container } from \"@chakra-ui/react\";\r\n\r\nimport { NavBar } from \"app/components\";\r\nimport { useWidths } from \"app/hooks\";\r\nimport { Routes } from \"./Routes\";\r\n\r\nexport const Layout = () => {\r\n  const { maxWidth } = useWidths();\r\n\r\n  return (\r\n    <Center flexDir=\"column\">\r\n      <NavBar websiteTitle=\"rainbow_chad\">\r\n        <NavBar.Item to=\"/\" name=\"Home\" />\r\n        <NavBar.ColorSwitch />\r\n      </NavBar>\r\n      <Container maxW={maxWidth} fontFamily=\"monospace\">\r\n        <Routes />\r\n      </Container>\r\n    </Center>\r\n  );\r\n};\r\n","import { Suspense } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { ChakraProvider, Spinner } from \"@chakra-ui/react\";\r\n\r\nimport { Layout } from \"./Layout\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <BrowserRouter basename=\"/blog\">\r\n      <ChakraProvider>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Layout />\r\n        </Suspense>\r\n      </ChakraProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ColorModeScript } from \"@chakra-ui/react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport theme from \"app/layout/theme\";\r\nimport { App } from \"app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { useMediaQuery } from \"@chakra-ui/react\";\r\n\r\nexport const useMediaQueries = () => {\r\n  const [isSm] = useMediaQuery(\"(min-width: 576px)\");\r\n  const [isMd] = useMediaQuery(\"(min-width: 768px)\");\r\n  const [isLg] = useMediaQuery(\"(min-width: 992px)\");\r\n  const [isXl] = useMediaQuery(\"(min-width: 1200px)\");\r\n\r\n  return { isSm, isMd, isLg, isXl };\r\n};\r\n","export const useWidths = () => {\r\n  const maxWidth = \"75ch\";\r\n\r\n  return { maxWidth };\r\n};\r\n","import { HStack, Icon, Link, LinkProps, Text, Tooltip } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { AiOutlineLink } from \"react-icons/ai\";\r\n\r\ninterface Props extends LinkProps {\r\n  href: string;\r\n  title: string;\r\n}\r\n\r\nexport const ExternalLink = (externalLinkProps: Props) => {\r\n  const { href, title, ...props } = externalLinkProps;\r\n\r\n  return (\r\n    <Tooltip label=\"This redirects to an external website.\">\r\n      <Link isExternal href={href} {...props}>\r\n        <HStack>\r\n          <Text>{title}</Text>\r\n          <Icon as={AiOutlineLink} />\r\n        </HStack>\r\n      </Link>\r\n    </Tooltip>\r\n  );\r\n};\r\n","import { Center, Flex, HStack, Heading, Link } from \"@chakra-ui/react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { useWidths } from \"app/hooks\";\r\n\r\ninterface Props {\r\n  websiteTitle: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const NavBarLg = ({ websiteTitle, children }: Props) => {\r\n  const { maxWidth } = useWidths();\r\n\r\n  return (\r\n    <Flex h=\"100px\" w={maxWidth} align=\"center\" justify=\"space-around\">\r\n      {/* Logo. */}\r\n      <Center w=\"100px\" h=\"100px\">\r\n        <Link\r\n          as={RouterLink}\r\n          to=\"/\"\r\n          _hover={{ textDecor: \"none\", boxShadow: \"none !important\" }}\r\n        >\r\n          <Heading size=\"md\" whiteSpace=\"nowrap\">\r\n            {websiteTitle}\r\n          </Heading>\r\n        </Link>\r\n      </Center>\r\n      {/* Navigation Menu. */}\r\n      <HStack spacing={4}>{children}</HStack>\r\n    </Flex>\r\n  );\r\n};\r\n","import {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerOverlay,\r\n  Flex,\r\n  IconButton,\r\n  Heading,\r\n  useDisclosure,\r\n  VStack,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\n\r\ninterface Props {\r\n  websiteTitle: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const NavBarSm = ({ websiteTitle, children }: Props) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Flex h=\"100px\" w=\"300px\" align=\"center\" justify=\"space-around\">\r\n        {/* Logo. */}\r\n        <Heading size=\"md\" whiteSpace=\"nowrap\">\r\n          {websiteTitle}\r\n        </Heading>\r\n        <IconButton\r\n          aria-label=\"toggle-menu\"\r\n          icon={<AiOutlineMenu />}\r\n          onClick={onOpen}\r\n        />\r\n      </Flex>\r\n      <Drawer size=\"xs\" isOpen={isOpen} placement=\"left\" onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerBody>\r\n            <Flex flexDir=\"column\" justify=\"center\" align=\"center\" mb={5}>\r\n              <Heading size=\"md\">{websiteTitle}</Heading>\r\n              <Divider />\r\n              <VStack>{children}</VStack>\r\n            </Flex>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n","import { useMediaQueries } from \"app/hooks\";\r\n\r\nimport { NavBarLg } from \"./NavBarLg\";\r\nimport { NavBarSm } from \"./NavBarSm\";\r\nimport { NavBarItem } from \"./NavBarItem\";\r\nimport { NavBarColorSwitch } from \"./NavBarColorSwitch\";\r\n\r\ninterface Props {\r\n  websiteTitle: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const NavBar = ({ websiteTitle, children }: Props) => {\r\n  const { isXl } = useMediaQueries();\r\n\r\n  if (isXl) return <NavBarLg websiteTitle={websiteTitle}>{children}</NavBarLg>;\r\n  else return <NavBarSm websiteTitle={websiteTitle}>{children}</NavBarSm>;\r\n};\r\n\r\nNavBar.Item = NavBarItem;\r\nNavBar.ColorSwitch = NavBarColorSwitch;\r\n","import { Link, LinkProps } from \"@chakra-ui/react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\ninterface Props extends LinkProps {\r\n  to: string;\r\n  name: string;\r\n}\r\n\r\nexport const NavBarItem = (navBarItemProps: Props) => {\r\n  const { to, name, ...props } = navBarItemProps;\r\n\r\n  return (\r\n    <Link as={RouterLink} to={to} {...props}>\r\n      {name}\r\n    </Link>\r\n  );\r\n};\r\n","import {\r\n  Center,\r\n  CenterProps,\r\n  Icon,\r\n  Switch,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\ninterface Props extends CenterProps {}\r\n\r\nexport const NavBarColorSwitch = ({ ...props }: Props) => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Center {...props}>\r\n      <Icon as={colorMode === \"light\" ? FaSun : FaMoon} mr={1} />\r\n      <Switch onChange={toggleColorMode} />\r\n    </Center>\r\n  );\r\n};\r\n"],"sourceRoot":""}